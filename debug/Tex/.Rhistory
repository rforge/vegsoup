?owin
simplify.owin(letterR, 0.3)
library(spatstat)
#	init vegbase#
source("/Users/roli/Documents/Rpackages/vegbase/debug/init.R")#
#
#	load data	#
setwd("~/Documents/Rpackages/vegbase/debug")#
#
load("species.Rdata")#
load("taxonomy.Rdata")#
load("sites.Rdata")#
#
query <- vegbase.query(species, sites, taxonomy)#
species <- vegbase.species(query, scale = "frequency")#
sites <- vegbase.sites(query)#
#
#	additional libraries#
library(rpart)#
library(mvpart)#
library(maptree)#
#
#	subset#
sts.tree.twig <- unique(sites@raw$tree.twig)#
other <- match(sites@raw$tree.twig, sts.tree.twig) == 1#
tree <- match(sites@raw$tree.twig, sts.tree.twig) == 2#
twig <- match(sites@raw$tree.twig, sts.tree.twig) == 3#
#
spc <- species[tree,]#
sts <- sites[tree,]#
#
#	drop very species poor plots#
drop <- apply(spc@pa, 1, sum) > 3#
spc <- spc[drop,]#
sts <- sts[drop,]
dim(spc)
dim(sts)
dis <- gdist(spc@pa, meth="bray", full = TRUE, sq = TRUE)
fit <- mvpart(dis ~ elevation+relief+vegetation+substrate+stones+tree.diameter+tree.twig+bark+expo+slope+cov,#
	sts@raw, method = "dist")
pdf("~/Desktop/foo.pdf", width = 16, height = 8)#
fit <- clip.rpart(fit, best = 10)#
draw.tree(fit,#
	nodeinfo = TRUE, digits = 2, cex = 0.5)#
dev.off()#
#
part <- fit$frame#
part$var <- as.character(part$var)#
part$var[grep("leaf", part$var)] <-#
	seq(along = grep("leaf", part$var))#
#
part <- as.numeric(part[fit$where,]$var)#
names(part) <- names(fit$where)#
#
partition <- vegbase.partition(spc,#
	method = "external", clustering = part)#
source("/Users/roli/Documents/Rpackages/vegbase/debug/lichen_tables.R")#
}#
#
#	ordination plots#
notrun = TRUE#
#
if (!notrun)#
{#
#
#	plotting fucntion#
plot.grps <- function (x, y)#
{#
	grps <- as.numeric(factor#
		(as.character(sts@raw[y][,1])))#
	for (i in 1:length(unique(grps)))#
	{#
	ordiellipse(x, groups = grps,#
		show.groups = i, col = i)#
	}#
	grps#
}#
#
cap.mod <- capscale(wisconsin(spc@vdm) ~#
	vegetation + relief + substrate,#
	dist = "bray", data = sts@raw)#
anova(cap.mod, by = "terms")#
#
par(mfcol = c(2,2), mar = rep(4,4))#
fig <- ordiplot(cap.mod, choices = c(1,2), type = "n")#
plot.grps(fig, "substrate")#
#
fig <- plot(cap.mod, choices = c(1,3))#
#
fig <- ordiplot3d(cap.mod)#
plot.grps(fig)#
#
fig <- plot(cap.mod, choices = c(2,3))#
plot.grps(fig)#
}
fit <- clip.rpart(fit, best = 30)#
draw.tree(fit,#
	nodeinfo = TRUE, digits = 2, cex = 0.5)#
dev.off()#
#
part <- fit$frame#
part$var <- as.character(part$var)#
part$var[grep("leaf", part$var)] <-#
	seq(along = grep("leaf", part$var))#
#
part <- as.numeric(part[fit$where,]$var)#
names(part) <- names(fit$where)#
#
partition <- vegbase.partition(spc,#
	method = "external", clustering = part)#
source("/Users/roli/Documents/Rpackages/vegbase/debug/lichen_tables.R")#
}#
#
#	ordination plots#
notrun = TRUE#
#
if (!notrun)#
{#
#
#	plotting fucntion#
plot.grps <- function (x, y)#
{#
	grps <- as.numeric(factor#
		(as.character(sts@raw[y][,1])))#
	for (i in 1:length(unique(grps)))#
	{#
	ordiellipse(x, groups = grps,#
		show.groups = i, col = i)#
	}#
	grps#
}#
#
cap.mod <- capscale(wisconsin(spc@vdm) ~#
	vegetation + relief + substrate,#
	dist = "bray", data = sts@raw)#
anova(cap.mod, by = "terms")#
#
par(mfcol = c(2,2), mar = rep(4,4))#
fig <- ordiplot(cap.mod, choices = c(1,2), type = "n")#
plot.grps(fig, "substrate")#
#
fig <- plot(cap.mod, choices = c(1,3))#
#
fig <- ordiplot3d(cap.mod)#
plot.grps(fig)#
#
fig <- plot(cap.mod, choices = c(2,3))#
plot.grps(fig)#
}
notrun = FALSE#
#
if (!notrun)#
{#
dis <- gdist(spc@pa, meth="bray", full = TRUE, sq = TRUE)#
fit <- mvpart(dis ~ elevation+relief+vegetation+substrate+stones+tree.diameter+tree.twig+bark+expo+slope+cov,#
	sts@raw, method = "dist")#
#
pdf("~/Desktop/foo.pdf", width = 16, height = 8)#
fit <- clip.rpart(fit, best = 30)#
draw.tree(fit,#
	nodeinfo = TRUE, digits = 2, cex = 0.5)#
dev.off()#
#
part <- fit$frame#
part$var <- as.character(part$var)#
part$var[grep("leaf", part$var)] <-#
	seq(along = grep("leaf", part$var))#
#
part <- as.numeric(part[fit$where,]$var)#
names(part) <- names(fit$where)#
#
partition <- vegbase.partition(spc,#
	method = "external", clustering = part)#
source("/Users/roli/Documents/Rpackages/vegbase/debug/lichen_tables.R")#
}#
#
#	ordination plots#
notrun = TRUE#
#
if (!notrun)#
{#
#
#	plotting fucntion#
plot.grps <- function (x, y)#
{#
	grps <- as.numeric(factor#
		(as.character(sts@raw[y][,1])))#
	for (i in 1:length(unique(grps)))#
	{#
	ordiellipse(x, groups = grps,#
		show.groups = i, col = i)#
	}#
	grps#
}#
#
cap.mod <- capscale(wisconsin(spc@vdm) ~#
	vegetation + relief + substrate,#
	dist = "bray", data = sts@raw)#
anova(cap.mod, by = "terms")#
#
par(mfcol = c(2,2), mar = rep(4,4))#
fig <- ordiplot(cap.mod, choices = c(1,2), type = "n")#
plot.grps(fig, "substrate")#
#
fig <- plot(cap.mod, choices = c(1,3))#
#
fig <- ordiplot3d(cap.mod)#
plot.grps(fig)#
#
fig <- plot(cap.mod, choices = c(2,3))#
plot.grps(fig)#
}
#	init vegbase#
source("/Users/roli/Documents/Rpackages/vegbase/debug/init.R")#
#
#	load data	#
setwd("~/Documents/Rpackages/vegbase/debug")#
#
load("species.Rdata")#
load("taxonomy.Rdata")#
load("sites.Rdata")#
#
query <- vegbase.query(species, sites, taxonomy)#
species <- vegbase.species(query, scale = "frequency")#
sites <- vegbase.sites(query)#
#
#	additional libraries#
library(rpart)#
library(mvpart)#
library(maptree)#
#
#	subset#
sts.tree.twig <- unique(sites@raw$tree.twig)#
other <- match(sites@raw$tree.twig, sts.tree.twig) == 1#
tree <- match(sites@raw$tree.twig, sts.tree.twig) == 2#
twig <- match(sites@raw$tree.twig, sts.tree.twig) == 3#
#
spc <- species[tree,]#
sts <- sites[tree,]#
#
#	drop very species poor plots#
drop <- apply(spc@pa, 1, sum) > 5#
spc <- spc[drop,]#
sts <- sts[drop,]
notrun = FALSE#
#
if (!notrun)#
{#
dis <- gdist(spc@pa, meth="bray", full = TRUE, sq = TRUE)#
fit <- mvpart(dis ~ elevation+relief+vegetation+substrate+stones+tree.diameter+tree.twig+bark+expo+slope+cov,#
	sts@raw, method = "dist")#
#
pdf("~/Desktop/foo.pdf", width = 16, height = 8)#
fit <- clip.rpart(fit, best = 30)#
draw.tree(fit,#
	nodeinfo = TRUE, digits = 2, cex = 0.5)#
dev.off()#
#
part <- fit$frame#
part$var <- as.character(part$var)#
part$var[grep("leaf", part$var)] <-#
	seq(along = grep("leaf", part$var))#
#
part <- as.numeric(part[fit$where,]$var)#
names(part) <- names(fit$where)#
#
partition <- vegbase.partition(spc,#
	method = "external", clustering = part)#
source("/Users/roli/Documents/Rpackages/vegbase/debug/lichen_tables.R")#
}#
#
#	ordination plots#
notrun = TRUE#
#
if (!notrun)#
{#
#
#	plotting fucntion#
plot.grps <- function (x, y)#
{#
	grps <- as.numeric(factor#
		(as.character(sts@raw[y][,1])))#
	for (i in 1:length(unique(grps)))#
	{#
	ordiellipse(x, groups = grps,#
		show.groups = i, col = i)#
	}#
	grps#
}#
#
cap.mod <- capscale(wisconsin(spc@vdm) ~#
	vegetation + relief + substrate,#
	dist = "bray", data = sts@raw)#
anova(cap.mod, by = "terms")#
#
par(mfcol = c(2,2), mar = rep(4,4))#
fig <- ordiplot(cap.mod, choices = c(1,2), type = "n")#
plot.grps(fig, "substrate")#
#
fig <- plot(cap.mod, choices = c(1,3))#
#
fig <- ordiplot3d(cap.mod)#
plot.grps(fig)#
#
fig <- plot(cap.mod, choices = c(2,3))#
plot.grps(fig)#
}
plot(species)
?capscale
cap.mod <- capscale(species@pa ~ 1, distance = "bray")
cap.mod <- capscale(species@pa ~ 1, distance = "bray", add = TRUE)
ordiplot3d(cap.mod)
cap.mod <- capscale(species@pa ~ 1, distance = "bray", add = FALSE)#
ordiplot3d(cap.mod)
cap.mod <- capscale(species@pa ~ 1, distance = "bray", add = FALSE)#
ordiplot3d(cap.mod)
cap.mod <- capscale(wisconsin(species@pa) ~ 1,#
	distance = "bray", add = TRUE)#
ordiplot3d(cap.mod)
cap.mod <- capscale(wisconsin(species@vdm) ~ 1,#
	distance = "bray", add = TRUE)#
ordiplot3d(cap.mod)
#cap.mod <- capscale(wisconsin(species@vdm) ~ 1,#
#	distance = "bray", add = TRUE)#
ordiplot3d(cap.mod, type = "n")
?points3d
apropos("points")
?ordiplot3d
fig <- ordiplot3d(cap.mod, type = "n")
fig
fig$points3d
fig$points3d
points3d <- function (x, y = NULL, z = NULL, type = "p", ...) #
{#
    xyz <- xyz.coords(x, y, z)#
    y2 <- (xyz$y - y.add)/y.scal#
    x <- xyz$x/x.scal + yx.f * y2#
    y <- xyz$z/z.scal + yz.f * y2#
    mem.par <- par(mar = mar, usr = usr)#
    on.exit(par(mem.par))#
    if (type == "h") {#
        y2 <- z.min + yz.f * y2#
        segments(x, y, x, y2, ...)#
        points(x, y, type = "p", ...)#
    }#
    else points(x, y, type = type, ...)#
}
fig
fig$points
fig$xyz.coords
fig
points(fig, "points", pch=16, col="red", cex = 0.7)
scores(cap.mod)
scores(cap.mod)[,c(1,2,3)]
scores(cap.mod)
?scores
scores(cap.mod, choices = 3)
scores(cap.mod, choices = 1:3)
names(fig)
fig$xyz.convert
fig <- ordiplot3d(cap.mod, type = "n")
xyz
xyz <- scores(cap.mod, choices = 1:3)#
#
xyz
class(xyz)
names(xyz)
xyz <- scores(cap.mod, choices = 1:3)$sites
class(xyz)
xyz <- apply(xyz, 1, function (x)#
	xyz.convert(x[1], x[2], x[3]))
xyz.convert <- function (x, y = NULL, z = NULL) #
{#
    xyz <- xyz.coords(x, y, z)#
    y <- (xyz$y - y.add)/y.scal#
    return(list(x = xyz$x/x.scal + yx.f * y, y = xyz$z/z.scal + #
        yz.f * y))#
}
xyz <- apply(xyz, 1, function (x)#
	xyz.convert(x[1], x[2], x[3]))
scatterplot3d(xyz[,1],xyz[,2], xyz[,3])
sites@raw$tree.twig
sites@raw$tree.twig == "other"
other <- sites@raw$tree.twig == "other"
scatterplot3d(xyz[,1],xyz[,2], xyz[,3], type = "n")
scatterplot3d(xyz[,1],xyz[,2], xyz[,3], type = "n", add = T)
?points
scatterplot3d(xyz[other,1],xyz[other,2], xyz[other,3], type = "n", add = T)
scatterplot3d(xyz[other,1],xyz[other,2], xyz[other,3], add = T)
scatterplot3d(xyz[!other,1],xyz[!other,2], xyz[!other,3], add = T)
names(fig)
fig$points
names(fig)
xyz.coords
?xyz.coords
apropos("ellipse")
apropos("ellipse")
ordiellipse
ordiArgAbsorber
#cap.mod <- capscale(wisconsin(species@vdm) ~ 1,#
#	distance = "bray", add = TRUE)#
points3d <- function (x, y = NULL, z = NULL, type = "p", ...) #
{#
	y.add = 0#
	x.scal = 1#
	y.scal = 1#
	z.scal = 1#
    xyz <- xyz.coords(x, y, z)#
    y2 <- (xyz$y - y.add)/y.scal#
    x <- xyz$x/x.scal + yx.f * y2#
    y <- xyz$z/z.scal + yz.f * y2#
    mem.par <- par(mar = mar, usr = usr)#
    on.exit(par(mem.par))#
    if (type == "h") {#
        y2 <- z.min + yz.f * y2#
        segments(x, y, x, y2, ...)#
        points(x, y, type = "p", ...)#
    }#
    else points(x, y, type = type, ...)#
}#
#
xyz.convert <- function (x, y = NULL, z = NULL) #
{#
    xyz <- xyz.coords(x, y, z)#
    y <- (xyz$y - y.add)/y.scal#
    return(list(x = xyz$x/x.scal + yx.f * y, y = xyz$z/z.scal + #
        yz.f * y))#
}#
#
xyz <- scores(cap.mod, choices = 1:3)$sites#
other <- sites@raw$tree.twig == "other"#
scatterplot3d(xyz[,1],xyz[,2], xyz[,3], add = T)
#cap.mod <- capscale(wisconsin(species@vdm) ~ 1,#
#	distance = "bray", add = TRUE)#
points3d <- function (x, y = NULL, z = NULL, type = "p", ...) #
{#
	y.add = 0#
	x.scal = 1#
	y.scal = 1#
	z.scal = 1#
    xyz <- xyz.coords(x, y, z)#
    y2 <- (xyz$y - y.add)/y.scal#
    x <- xyz$x/x.scal + yx.f * y2#
    y <- xyz$z/z.scal + yz.f * y2#
    mem.par <- par(mar = mar, usr = usr)#
    on.exit(par(mem.par))#
    if (type == "h") {#
        y2 <- z.min + yz.f * y2#
        segments(x, y, x, y2, ...)#
        points(x, y, type = "p", ...)#
    }#
    else points(x, y, type = type, ...)#
}#
#
xyz.convert <- function (x, y = NULL, z = NULL) #
{#
    xyz <- xyz.coords(x, y, z)#
    y <- (xyz$y - y.add)/y.scal#
    return(list(x = xyz$x/x.scal + yx.f * y, y = xyz$z/z.scal + #
        yz.f * y))#
}#
#
xyz <- scores(cap.mod, choices = 1:3)$sites#
other <- sites@raw$tree.twig == "other"#
scatterplot3d(xyz[,1],xyz[,2], xyz[,3], ytpe ="n")
#cap.mod <- capscale(wisconsin(species@vdm) ~ 1,#
#	distance = "bray", add = TRUE)#
points3d <- function (x, y = NULL, z = NULL, type = "p", ...) #
{#
	y.add = 0#
	x.scal = 1#
	y.scal = 1#
	z.scal = 1#
    xyz <- xyz.coords(x, y, z)#
    y2 <- (xyz$y - y.add)/y.scal#
    x <- xyz$x/x.scal + yx.f * y2#
    y <- xyz$z/z.scal + yz.f * y2#
    mem.par <- par(mar = mar, usr = usr)#
    on.exit(par(mem.par))#
    if (type == "h") {#
        y2 <- z.min + yz.f * y2#
        segments(x, y, x, y2, ...)#
        points(x, y, type = "p", ...)#
    }#
    else points(x, y, type = type, ...)#
}#
#
xyz.convert <- function (x, y = NULL, z = NULL) #
{#
    xyz <- xyz.coords(x, y, z)#
    y <- (xyz$y - y.add)/y.scal#
    return(list(x = xyz$x/x.scal + yx.f * y, y = xyz$z/z.scal + #
        yz.f * y))#
}#
#
xyz <- scores(cap.mod, choices = 1:3)$sites#
other <- sites@raw$tree.twig == "other"#
scatterplot3d(xyz[,1],xyz[,2], xyz[,3], type ="n")
points3d(xyz[,1],xyz[,2], xyz[,3])
points(xyz[,1],xyz[,2])
scatterplot3d
library(rgl)
rm(points3d)
library(rgl)
?points3d
?ordipot3d
?ordiplot3d
ordirgl(cap.mod)
ordiplot3d(cap.mod)
?scatterplot3d
ordiplot3d(cap.mod, angle = 30)
fig <- ordiplot3d(cap.mod, type = "n")#
points(fig, what = "sites", select = other)
points(fig, what = "points3d", select = other)
fig
fig <- ordiplot(cap.mod, type = "n")
points(fig, what = "sitesy", select = other)
points(fig, what = "sites", select = other)
points(fig, what = "sites", select = other, pch = 16, col = 1)
points(fig, what = "sites", select = !other, pch = 16, col = 2)
fig <- ordiplot(cap.mod, type = "n")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.5))
points(fig, what = "sites", select = !other,#
		pch = 16, col = rgb(0,0,0,0.5))
fig <- ordiplot(cap.mod, type = "n")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = !other,#
		pch = 16, col = rgb(1,0,0,0.2))
fig <- ordiplot(cap.mod, type = "n")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.5))#
points(fig, what = "sites", select = !other,#
		pch = 16, col = rgb(1,0,0,0.5))
fig <- ordiplot(cap.mod, type = "n", choices = c(1,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.5))#
points(fig, what = "sites", select = !other,#
		pch = 16, col = rgb(1,0,0,0.5))
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.5))#
points(fig, what = "sites", select = !other,#
		pch = 16, col = rgb(1,0,0,0.5))
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.5))#
points(fig, what = "sites", select = !other,#
		pch = 16, col = rgb(1,0,0,0.5))
library(rgl)#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.5))
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.5))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,1,0,0.5))#
points(fig, what = "sites", select = tree.twig,#
		pch = 16, col = rgb(0,0,1,0.5))
tree.twig <- sites@raw$tree.twig == "tree.twig"
xyz <- scores(cap.mod, choices = 1:3)$sites#
other <- sites@raw$tree.twig == "other"#
tree <- sites@raw$tree.twig == "tree"#
tree.twig <- sites@raw$tree.twig == "tree.twig"
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.5))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,1,0,0.5))
points(fig, what = "sites", select = tree.twig,#
		pch = 16, col = rgb(0,0,1,0.5))
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))
tree.twig
sites@raw$tree.twig
xyz <- scores(cap.mod, choices = 1:3)$sites#
other <- sites@raw$tree.twig == "other"#
tree <- sites@raw$tree.twig == "tree"#
twig <- sites@raw$tree.twig == "twig"#
#
library(rgl)#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.5))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,1,0,0.5))#
points(fig, what = "sites", select = twig,#
		pch = 16, col = rgb(0,0,1,0.5))
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.5))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,1,0,0.5))#
points(fig, what = "sites", select = twig,#
		pch = 16, col = rgb(0,0,0,0.5))
points(fig, what = "sites", select = twig,#
		pch = 1, col = rgb(0,0,0,0.5))
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.5))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,1,0,0.5))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.5))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.5))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot3d(cap.mod, type = "n", choices = c(1,2))
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.5))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.5))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.5))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.5))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
ordiplot3d(cap.mod, 	pch = 16, col = rgb(0,0,0,0.2))
ordiplot3d(cap.mod, col = rgb(0,0,0,0.2))
ordiplot3d(cap.mod)
names(sites@raw)
envfit(fig, sites@raw[,c("elevation", "richness")])
sites@raw[,c("elevation", "richness")]
envfit(fig, as.matrix(sites@raw[,c("elevation", "richness")]))
envfit(X = fig, P = as.matrix(sites@raw[,c("elevation")]))
envfit(X = fig, P = as.matrix(sites@raw[,c("richness")]))
sites@raw[,c("richness")]
envfit(X = fig, P = as.matrix(sites@raw[,c("elevation")]))
fig <- ordiplot3d(cap.mod)#
env <- envfit(X = fig, P = as.matrix(sites@raw[,c("elevation")]))
fig <- ordiplot3d(cap.mod)
env <- envfit(X = fig, P = as.matrix(sites@raw[,c("elevation")]))
env <- envfit(X = fig, P = as.matrix(sites@raw[,c("elevation")]))
fig <- ordiplot3d(cap.mod)
fig <- ordiplot3d(cap.mod, display ="species")
fig <- ordiplot3d(cap.mod, display ="sites")
env <- envfit(X = fig, P = as.matrix(sites@raw[,c("elevation")]))
env
envfit(X = fig, P = as.matrix(sites@raw[,c("elevation")]))
fig <- ordiplot3d(cap.mod, type ="h")
fig <- ordiplot3d(cap.mod, type ="n")
points(fig, what = "sites", select = other)
fig
scatterplot3d
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot3d(cap.mod, type ="n")
fig <- ordiplot3d(cap.mod)
points(fig, what = "sites", select = other)
points.ordiplot(fig, what = "sites", select = other)
points.ordiplot(fig, what = "sites", choices = c(1,2,3), select = other)
?scatterplot3d
fig <- ordiplot3d(cap.mod, angle = 140)
fig <- ordiplot3d(cap.mod, angle = 10)
fig <- ordiplot3d(cap.mod, angle = 90)
fig <- ordiplot3d(cap.mod, angle = 60)
fig <- ordiplot3d(cap.mod, angle = 30)
fig <- ordiplot3d(cap.mod, angle = 30, scale.y = 2)
fig <- ordiplot3d(cap.mod, angle = 30, scale.y = 1.5)
fig <- ordiplot3d(cap.mod, angle = 180, scale.y = 1.5)
fig <- ordiplot3d(cap.mod, angle = 90, scale.y = 1.5)
fig <- ordiplot3d(cap.mod, angle = 70, scale.y = 1.5)
fig <- ordiplot3d(cap.mod, angle = 70, scale.y = 2)
fig <- ordiplot3d(cap.mod, angle = 70, scale.y = 0.5)
fig <- ordiplot3d(cap.mod, angle = 70, scale.y = 1)
fig <- ordiplot3d(cap.mod, angle = 10, scale.y = 1)
fig <- ordiplot3d(cap.mod, angle = -80, scale.y = 1)
fig <- ordiplot3d(cap.mod, angle = -90, scale.y = 1)
fig <- ordiplot3d(cap.mod, angle = -30, scale.y = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(1,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(1,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot3d(cap.mod, angle = -30, scale.y = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(1,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(1,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2))#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
par(mfrow = c(2,2))#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2),#
	main = "1-2")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,3),#
		main = "2-3")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3),#
		main = "2-3")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
cap.mod <- capscale(wisconsin(species@vdm) ~ tree.twig,#
	data = sites@raw,#
	distance = "bray", add = TRUE)#
#
#
other <- sites@raw$tree.twig == "other"#
tree <- sites@raw$tree.twig == "tree"#
twig <- sites@raw$tree.twig == "twig"#
#
par(mfrow = c(2,2))#
#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2),#
	main = "1-2")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,3),#
		main = "2-3")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3),#
		main = "2-3")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
ordiplot3d(cap.mod, col = 2)
?ordiplot3d
ordiplot3d(cap.mod, groups = sites@raw$tree.twig)
ordiplot3d
fig <- ordiplot3d(cap.mod)
xyz <- scores(fig)
xyz <- scores(fig, "sites")
xyz <- scores(fig$sites)
names(fig)
xyz <- scores(cap.mod)
xyz <- scores(cap.mod, coices = 1:3)
xyz
?scores
xyz <- scores(cap.mod, "sites")
xyz <- scores(cap.mod, display = "sites")
xyz <- scores(cap.mod, display = "sites")[,1:3]
xyz <- scores(cap.mod, display = "sites")
dim(xyz)
cap.mod
ordiplot3d
?ordiplot3d
fig <- ordiplot3d(cap.mod, arr.len = 1)
fig <- ordiplot3d(cap.mod, arr.len = 0.3)
fig <- ordiplot3d(cap.mod, arr.len = 0.4)
fig <- ordiplot3d(cap.mod, arr.len = 0.4)
fig <- ordiplot3d(cap.mod, arr.len = 0.4)
fig <- ordiplot3d(cap.mod, arr.len = 1)
fig <- ordiplot3d(cap.mod)
fig$points3d
fig$points3d(0,0,0)
fig$points3d(0,0,0, cex = 5)
fig <- ordiplot3d(cap.mod, type = "n")
scores(cap.mod)
?scores
xyz <- scores(cap.mod, choices =1:3, display = "sites")
dim(xyz)
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3], cex = 5)
fig <- ordiplot3d(cap.mod, type = "n")#
xyz <- scores(cap.mod, choices =1:3, display = "sites")#
fig$points3d(xyz[other,1],xyz[other,2],xyz[other,3],#
	pch = 16, col = rgb(1,0,0,0.2))
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3],#
	pch = 16, col = rgb(0,0,0,0.2))
sites@raw$tree.twig
foo <- sites@raw$tree.twig
tree.twig <- sites@raw$tree.twig
data.frame(other = tree.twig$other)
tree.twig <- sites@raw$tree.twig
data.frame(other = tree.twig == "other")
tree.twig <- sites@raw$tree.twig#
data.frame(other = tree.twig == "other",#
	tree = tree.twig == "tree",#
	twig = tree.twig == "twig")
tree.twig <- data.frame(other = tree.twig == "other",#
	tree = tree.twig == "tree",#
	twig = tree.twig == "twig")
cap.mod <- capscale(wisconsin(species@vdm) ~ other+tree+twig,#
	data = tree.twig,#
	distance = "bray", add = TRUE)
anova(cap.mod)
fig <- ordiplot3d(cap.mod, type = "n")#
xyz <- scores(cap.mod, choices =1:3, display = "sites")#
fig$points3d(xyz[other,1],xyz[other,2],xyz[other,3],#
	pch = 16, col = rgb(1,0,0,0.2))#
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3],#
	pch = 16, col = rgb(0,0,0,0.2))
ordiplot3d(cap.mod)
fig <- ordiplot3d(cap.mod, type = "n")#
xyz <- scores(cap.mod, choices =1:3, display = "sites")#
fig$points3d(xyz[other,1],xyz[other,2],xyz[other,3],#
	pch = 16, col = rgb(1,0,0,0.2))#
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3],#
	pch = 16, col = rgb(0,0,0,0.2))#
fig$points3d(xyz[twig,1],xyz[tree,2],xyz[twig,3],#
	pch = 16, col = rgb(0,0,0,0.2))
fig <- ordiplot3d(cap.mod, type = "n")#
xyz <- scores(cap.mod, choices =1:3, display = "sites")#
fig$points3d(xyz[other,1],xyz[other,2],xyz[other,3],#
	pch = 16, col = rgb(1,0,0,0.2))#
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3],#
	pch = 16, col = rgb(0,0,0,0.2))#
fig$points3d(xyz[twig,1],xyz[tree,2],xyz[twig,3],#
	pch = 16, col = rgb(0,0,1,0.2))
fig <- ordiplot3d(cap.mod, type = "n")#
xyz <- scores(cap.mod, choices =1:3, display = "sites")#
fig$points3d(xyz[other,1],xyz[other,2],xyz[other,3],#
	pch = 16, col = rgb(1,0,0,0.2))#
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3],#
	pch = 16, col = rgb(0,0,0,0.2))
twig
fig <- ordiplot3d(cap.mod, type = "n")#
xyz <- scores(cap.mod, choices =1:3, display = "sites")#
fig$points3d(xyz[other,1],xyz[other,2],xyz[other,3],#
	pch = 16, col = rgb(1,0,0,0.2))#
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3],#
	pch = 16, col = rgb(0,0,0,0.2))#
fig$points3d(xyz[twig,1],xyz[twig,2],xyz[twig,3],#
	pch = 16, col = rgb(0,0,1,0.2))
par(mfrow = c(2,2))#
#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2),#
	main = "1-2")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,3),#
		main = "2-3")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3),#
		main = "2-3")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)
fig <- ordiplot3d(cap.mod, type = "n")#
xyz <- scores(cap.mod, choices =1:3, display = "sites")#
fig$points3d(xyz[other,1],xyz[other,2],xyz[other,3],#
	pch = 16, col = rgb(1,0,0,0.2))#
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3],#
	pch = 16, col = rgb(0,0,0,0.2))#
fig$points3d(xyz[twig,1],xyz[twig,2],xyz[twig,3],#
	pch = 1)
fig <- ordiplot3d(cap.mod, type = "n", main ="")
fig <- ordiplot3d(cap.mod, type = "n", main = "1-2-3")#
xyz <- scores(cap.mod, choices =1:3, display = "sites")#
fig$points3d(xyz[other,1],xyz[other,2],xyz[other,3],#
	pch = 16, col = rgb(1,0,0,0.2))#
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3],#
	pch = 16, col = rgb(0,0,0,0.2))#
fig$points3d(xyz[twig,1],xyz[twig,2],xyz[twig,3],#
	pch = 1)
par(mfrow = c(2,2))#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,2),#
	main = "1-2")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(1,3),#
		main = "2-3")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
#
fig <- ordiplot(cap.mod, type = "n", choices = c(2,3),#
		main = "2-3")#
points(fig, what = "sites", select = other,#
	pch = 16, col = rgb(1,0,0,0.2))#
points(fig, what = "sites", select = tree,#
		pch = 16, col = rgb(0,0,0,0.2))#
points(fig, what = "sites", select = twig,#
		pch = 1)#
#
fig <- ordiplot3d(cap.mod, type = "n", main = "1-2-3")#
xyz <- scores(cap.mod, choices =1:3, display = "sites")#
fig$points3d(xyz[other,1],xyz[other,2],xyz[other,3],#
	pch = 16, col = rgb(1,0,0,0.2))#
fig$points3d(xyz[tree,1],xyz[tree,2],xyz[tree,3],#
	pch = 16, col = rgb(0,0,0,0.2))#
fig$points3d(xyz[twig,1],xyz[twig,2],xyz[twig,3],#
	pch = 1)
