#import(coenoflex) is missing from CRAN


#useDynLib(vegsoup) dropped at the moment


#	imports from base packages

import(methods)

import(parallel)

importFrom("stats", as.dist, quantile, as.dendrogram)

importFrom("utils", head, tail)

importFrom("graphics", plot, hist)

importFrom("grDevices", "cm.colors", "rgb", "xy.coords")

importFrom("graphics", "axis", "frame", "legend", "lines", "par",
           "plot.window", "points", "rect", "rug", "text", "title")

importFrom("stats", "aggregate", "cor", "cutree", "dendrapply",
           "dhyper", "fivenum", "hclust", "heatmap", "is.leaf",
           "kmeans", "mad", "median", "model.frame", "phyper", "pnorm",
           "predict", "reshape", "rlnorm", "runif", "sd", "var")

importFrom("utils", "combn", "read.csv", "setTxtProgressBar", "stack",
           "txtProgressBar", "type.convert")


#	used in several places

importFrom("stringr", str_trim, str_pad)

#	used in a single function/method
importFrom("coenocliner", "coenocline")

#importFrom("ggmap", revgeocode) # as ggmap::revgeocode

import("Hmisc") #importFrom("Hmisc", latex) does not work?

importFrom("RColorBrewer", brewer.pal) # also as RColorBrewer::brewer.pal

importFrom("pbapply", pboptions, pbapply) # also as pbapply::pboptions and pbapply::pbapply

importFrom("XML", xmlRoot, xmlTreeParse, xmlApply, xmlSApply, xmlValue, xmlAttrs)

importFrom("geonames", GNsrtm3)

importFrom("googleVis", gvisMap)

importFrom("isopam", isopam)

importFrom("mefa", mefa, stcs)

importFrom("gclus", dmat.color, plotcolors, order.single)


#	imports the package really needs

importFrom("labdsv", indval)

importFrom("optpart", optpart, optsil, optindval, disdiam, tabdev, partana)

importFrom("vegan", coverscale, vegdist, decostand, distconnected,
		   capscale, scores, ordiplot, ordiellipse, ordispider,
		   wisconsin, decorana, wascores, indpower)

importFrom("cluster", ellipsoidhull, agnes, pam, silhouette, fanny)

importFrom("vegclust", vegclustdist, defuzzify, hcr)

importFrom("sp", rbind.SpatialPoints, rbind.SpatialPointsDataFrame,
				 rbind.SpatialPolygons, rbind.SpatialPolygonsDataFrame,
				 SpatialPointsDataFrame, SpatialPolygonsDataFrame,
				 identicalCRS, CRS)
importClassesFrom(sp, Spatial, SpatialPointsDataFrame,
					  SpatialPolygonsDataFrame, CRS, GridTopology)
importMethodsFrom(sp, coordinates, "coordinates<-", bbox, spplot,
					  proj4string, "proj4string<-", spTransform,
					  over)

# importFrom("rgdal", ogrInfo)

importClassesFrom(raster, Extent, BasicRaster, Raster, RasterLayer,
						  RasterBrick, RasterStack, RasterStackBrick)
importMethodsFrom(raster, extract, ncell, extent, KML)

# package multitable was removed from the CRAN (2016-05-02)
# importFrom("multitable", data.list)

importClassesFrom(Matrix, sparseMatrix, dsparseMatrix)

#explicit exports
export(
	"Coverscale",
	"species",   # also in exportMethods
	"species<-", # also in exportMethods
	"sites",
	"taxonomy",
	"taxonomy<-",
	"stackSpecies",
	"stackSites",
	"stackCoordinates",
	"shapeSpecies",
	"reshapeSpecies",
	"SpeciesTaxonomy",
	"Vegsoup",
       "coenoflex",
	"instantsoup",
	"plainsoup",
	"OptimStride",
	"VegsoupPartition",
	"plotPCO",
	"read.verbatim",
	"read.verbatim.append",
	"read.XML",
	"write.verbatim",
	"str2latlng",
	"tile2latlng",
	"latlng2tile",
	"whatshere2lnglat",
	"compass",
	"singleton",
	"singletons",
	"castFooter",
	"header",
	"template",
	"combine",
	"decode"
)

exportMethods(
	"[",
	"$",
	"abbr",
	"apriori",
	"accuracy",
	"as.vector",
	"as.matrix",
	"as.character",
	"as.logical",
	"as.numeric",
	"as.dist",
	"as.hclust",
	"as.dendrogram",
        "as.table",
	"average",
	"bind",
	"BraunBlanquetReduce",
	"colSums",
	"colMeans",
	"compress",
	"confusion",
	"constancy",
	"contingency",
	"coverscale",
	"coverscale<-",
	"coordinates",
	"decostand",
	"decostand<-",
	"dim",
	"disdiam",
	"elevation",
	"extent",
	"extract",
	"fill",
	"hist",
	"fidelity",
	"FisherTest",
	"distconnected",
	"getK",
	"getStat",
	"hcr",
	"quicklook",	
	"head",
	"coldiss",
	"indices",
	"Indpower",
	"compspec",
	"Indval",
	"identical",
	"isolate",
	"intersect",
	"isamic",
	"is.continuous",
	"is.ordinal",
	"is.occurence",
	"Latex",
	"layers",
	"layernumber",
	"layers<-",
	"layer",
	"KML",
	"reverseGeocode",
	"method",
	"murdoch",
	"names",
	"names<-",
	"ncol",
	"ncell",
	"nndist",
	"nrow",
	"optimclass1",
	"optimclass2",
	"optindval",
	"optsil",
	"outlier",
	"over",
	"partana",
	"partition",
	"partitions",
	"partitioning",
	"partitioningMatrix",
	"partitioningCombinations",
	"peaks",
	"Phi",
	"plot",
	"proj4string",
	"proj4string<-",
	"quantile",
	"relevee",
        "reorder",
	"richness",
	"rectangles",
	"rownames",
	"row.names",
	"rownames<-",
	"row.names<-",
	"rowSums",
	"rowMeans",
	"sample",
	"seriation",
	"shared",
	"SigFidelity",
	"silhouette",
	"species",
	"species<-",
	"sites",
	"sites<-",
	"splitAbbr",
	"SpatialPointsVegsoup",
	"SpatialPolygonsVegsoup",
	"taxalist",
	"spread",
	"stable",
	"stride",
	"summary",
	"subset",
	"tabdev",
	"tail",
	"taxon",
	"taxonomy",
	"threshold",
	"typical",
	"variable",
	"variable<-",
	"variables",
	"vegdist",
	"vegdist<-",
	"which.max",
	"write.verbatim"
)

exportClasses(
	 "Coverscale",
	 "Species",
	 "Sites",
	 "Taxonomy",
	 "SpeciesTaxonomy",
	 "Vegsoup",
	 "VegsoupPartition",
	 "VegsoupPartitionFidelity",
	 "VegsoupOptimstride"
)

# ensure that dispatch also works inside base functions
S3method(as.matrix, Vegsoup)
S3method(as.array, Vegsoup)
S3method(as.vector, Vegsoup)
S3method(points, Vegsoup)
S3method(as.data.frame, Vegsoup)
S3method(as.data.frame, Sites)

#S3method(as.mefa, Vegsoup)

#S3method(as.SpatialPoints, Vegsoup)
#S3method(as.SpatialPointsDataFrame, Vegsoup)

#S3method(coverscale, Vegsoup)
#S3method(vegdist, Vegsoup)
#S3method(as.dist, Vegsoup)


#S3method(as.sparseMatrix, Vegsoup)