\documentclass{article}

\usepackage{natbib}
\usepackage{graphics}
\usepackage{amsmath}
\usepackage{indentfirst}
\usepackage{hanging}
\usepackage[utf8]{inputenc}
\usepackage{hyperref}

%\VignetteIndexEntry{Introduction to the vegsoup package}

\author{Roland Kaiser}
\title{Classes and methods for phytosociology \\
Version 0.1-7}

\DeclareGraphicsExtensions{.png,.pdf,.jpg}

\begin{document}

\SweaveOpts{png=TRUE}
\SweaveOpts{resolution=100}
\SweaveOpts{keep.source=TRUE}

<<foo,include=FALSE,echo=FALSE>>=
options(width = 60)
pD <- packageDescription("vegsoup")
@

\title{ Introduction to the 'vegsoup' package\\(version \Sexpr{pD$Version}) }

\author{Roland Kaiser}
\maketitle

%\begin{abstract}
%\end{abstract}

\section{Introduction}

Almost all data sets in vegetation ecology do not easily fit into a single data frame. The problem is at least three-fold. Additional to the (i) species component, there is often (ii) header or sites data, quite regular also (iii) a table encoding a taxonomic concept. Importantly, explicit spatial information is further wished to be readily available for data sets, this demands another additional component. Although manageable, manipulating such inherently multiple table relations can result in long and difficult to read workflows. The main burden arises by tightly linking several objects in terms of order and content (this is not always straight forward). The vegsoup package aids in this situation and provides a well defined class that is capable of storing such data sets. It is obvious to use S4 classes in this situation and the vegsoup package exploits all its's benefits.

The vegsoup package offers base classes for all the core components outlined above. Spatial classes are imported from package sp. Vegsoup objects do not only have facilities (slots) to store data components but may have additional options specified. For example, if the input data provides more information than presence or absence of a species in a sampling unit, e.g. ordinal abundance classes, a decryption of the original measurement scale is desirable in order to translate coverscale labels to numbers. In this respect the package defines a class Coverscale. Basal analysis parameters, such as the definition of an appropriate dissimilarity measure for the data at hand, are often wished to be held constant during analysis. All Vegsoup* objects carry such an attribute. Regarding the spatial content a coordinate reference system is mandatory for the plethora of spatial methods provided by other packages, therefore, Vegsoup classes contain a slot proj4string.

The best way to introduce the functionalities of the package is a session with example code. We load the library as usual into our R environment.

<<load, results=hide>>=
library(vegsoup)
@

<<eval=FALSE>>=
Vegsoup()
@

After installation you can invoke this PDF with
<<eval=FALSE>>=
vignette("vegsoup")
@


\section{Classes}
The package uses S4 classes that relate to each other by direct inheritance. First, the classes, their relation to each and accessor methods for the respective class slots are presented. In the following section generic methods for the classes are discussed.

\subsection{Vegsoup}
Objects of class \verb@Vegsoup@ contain a complete set of information typical for a data set in vegetation ecology (phytosociology). There is a bunch of methods to access relevant information or to manipulate objects in various ways. In this respect, the package methods try to be as comprehensive as possible.

<<Vegsoup-1>>=
showClass("Vegsoup")
@


\subsection{VegsoupPartition}
Objects of class \verb@VegsoupPartition@ extend class \verb@Vegsoup@ (that means all methods defined form this class apply to the extended class) and provide additional slots \emph{k}, \emph{part} and \emph{method}. The number of partitions (clusters) an object is partitioned into is given by slot \emph{k} and \verb@getK@ is the generic to access this slot. The assignment of plots to partitions is given by slot \emph{part} and \verb@Partitioning@ returns the respective vector of group memberships. Finally the \emph{method} slots, records the method which was applied when \verb@VegsoupPartition@ objects are created.

<<Vegsoup-2>>=
showClass("VegsoupPartition")
@

\subsection{VegsoupOptimstride}
Objects of class \verb@VegsoupOptimstride@ extend \verb@Vegsoup@.

<<Vegsoup-3>>=
showClass("VegsoupOptimstride")
@

\subsection{VegsoupPartitionFidelity}
Objects of class \verb@VegsoupPartitionFidelity@ extend \verb@VegsoupPartition@ and provide slots \emph{stat}, \emph{fisher.test}, \emph{lowerCI}, \emph{upperCI} and \emph{nboot}. The before mentioned slots carry the results as obtained by the particular fidelity-method applied when creating an object of the class. Some slots of them might be NULL (lowerCI, upperCI, nboot).

<<Vegsoup-4>>=
showClass("VegsoupPartitionFidelity")
@

\section{Methods}

<<eval=FALSE>>=
showMethods(class = "Vegsoup", where = "package:vegsoup")
showMethods(class = "VegsoupPartition", where = "package:vegsoup")
showMethods(class = "VegsoupPartitionFidelity", where = "package:vegsoup")
@

\section{References}

\begin{hangparas}{3em}{1}

%\noindent Bivand, R.S., E.J. Pebesma and V. Gomez-Rubio, 2008. Applied Spatial Data Analysis with R. Springer. 378p.

\noindent Chambers, J.M., 2009. Software for Data Analysis: Programming with R. Springer. 498p.

\end{hangparas}

\end{document}
